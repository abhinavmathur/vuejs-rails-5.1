<div class="container" xmlns:v-bind="http://www.w3.org/1999/xhtml">
  <p>
    <div class="form-group">
      <label for="">Ask a yes/no question</label>
      <input type="text" v-model="question" class="form-control">
    </div>
  </p>

  <img :src="image" alt="">

  <br>
  <br>
  <h4>{{ answer }}</h4>
</div>

<script src="https://unpkg.com/vue"></script>
<script src="https://unpkg.com/axios@0.12.0/dist/axios.min.js"></script>
<script src="https://unpkg.com/lodash@4.13.1/lodash.min.js"></script>
<script type="text/javascript" charset="utf-8">

    var watchExampleVM = new Vue({
        el: '.container',
        data: {
            question: '',
            image: '',
            answer: 'I cannot give you an answer until you ask a question!'
        },
        watch: {
            // whenever question changes, this function will run
            question: function (newQuestion) {
                this.answer = 'Waiting for you to stop typing...';
                this.getAnswer()
            }
        },
        methods: {
            // _.debounce is a function provided by lodash to limit how
            // often a particularly expensive operation can be run.
            // In this case, we want to limit how often we access
            // yesno.wtf/api, waiting until the user has completely
            // finished typing before making the ajax request. To learn
            // more about the _.debounce function (and its cousin
            // _.throttle), visit: https://lodash.com/docs#debounce
            getAnswer: _.debounce(
                function () {
                    var vm = this;
                    if (this.question.indexOf('?') === -1 || !this.question.startsWith('Is')) {
                        this.answer = 'Questions usually contain a question mark and start with "Is..." ;-)';
                        this.image = '';
                        return
                    }
                    this.answer = 'Thinking...';
                    this.image = '';
                    axios.get('https://yesno.wtf/api')
                        .then(function (response) {
                            vm.answer = _.capitalize(response.data.answer);
                            vm.image = response.data.image;
                        })
                        .catch(function (error) {
                            vm.answer = 'Error! Could not reach the API. ' + error
                        })
                },
                // This is the number of milliseconds we wait for the
                // user to stop typing.
                500
            )
        }
    })
</script>